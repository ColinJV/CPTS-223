Using a LINKED LIST for the data structure involved with storing the commands and descriptions
 - Advantage: Flexible memory size allows for fast insertions and deletions and a dynamically changing data set with no concrete on size. This advantage is encountered in this program when the player chooses to add or remove commands from the list. Commands can be removed from anywhere in the list without the need to shift other elements, and additions are made quickly to the front.
 - Disadvantage: random access is not possible in a linked list since nodes must be traversed one at a time starting from the first element. This disadvantage is encountered in this assignment when generating Questions to pose to the player. Question prompts display the correct answer as one option out of four total, with three incorrect options. These options are generated by generating a random number between 0 and the size of the list and traversing the list until that number of traversals have been made.

Using an ARRAY for the data structure involved with storing the user profiles
 - Advantage: arrays enable access to any cell in constant time. This was taken advantage of in tracking and updating Player statistics. Using an integer variable to track which index in the array an active player profile existed in, any modifications to the relevant Player statistics (adding or removing score) are made in constant time.
 - Disadvantage: static size puts a limit on the number of player profiles that can be created, which in the case of this implementation is 10. Furthermore, insertions cannot be made without either moving the other items in the array, traversing the array to find the first empty cell (thereby negating the advantage of instant access), or dedicating a variable to track the array's current size. This implementation dedicates a variable tracking the array's current size to enable constant time insertions.